"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7610],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=m(n),p=r,h=d["".concat(l,".").concat(p)]||d[p]||c[p]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3349:(e,t,n)=>{n.d(t,{Z:()=>a});const a=(0,n(6327).Z)({colorSchemes:{light:{palette:{primary:{main:"hsl(240, 48%, 47%)",dark:"hsl(240, 48%, 38%)"},secondary:{main:"#fff"},background:{paper:"hsl(240, 15%, 95%)"}}},dark:{palette:{primary:{main:"hsl(240, 90%, 70%)",dark:"hsl(240, 90%, 63%)"},secondary:{main:"#fff"},background:{paper:"hsl(210, 3%, 15%)"}}}},breakpoints:{values:{xs:0,sm:600,md:800,lg:1e3,xl:1536}},typography:{fontFamily:["'Open Sans'","Roboto","'Helvetica Neue'","Arial","sans-serif"].join(",")}})},4552:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>y,default:()=>x,frontMatter:()=>g,metadata:()=>f,toc:()=>b});var a=n(7462),r=n(7294),o=n(3905),i=n(4073),s=n(1181),l=n(5861),m=n(8669),u=n(3349),d=n(3078);const c=n.p+"assets/images/theme-synced-cd0d42e855ccc9060c036e7e1913e55b.jpg";var p=n(5418);function h(){return r.createElement(m.CM,{theme:u.Z},r.createElement(p.Z,{sx:{paddingTop:4,paddingBottom:4,backgroundColor:"background.paper",borderTop:3,borderBottom:3,borderImage:"linear-gradient(to right, #8e2de2, #4a00e0)",borderImageSlice:1}},r.createElement(s.ZP,{container:!0,justifyContent:"center"},r.createElement(s.ZP,{item:!0,xs:12},r.createElement(l.Z,{variant:"h3",fontWeight:"700",sx:{color:"primary.main",textAlign:"center"}},"Go forth and do great things.")))))}const g={slug:"Guide to using Docusaurus with Material UI",title:"Guide: Docusaurus with Material UI",authors:["reap3r"],tags:["material ui","material","docusaurus","cssvarsprovider","theme","dark mode","light mode"]},y=void 0,f={permalink:"/blog/Guide to using Docusaurus with Material UI",editUrl:"https://github.com/Boston343/web-dev-docs/blog/2023-01-07-materialui-with-docusaurus/index.mdx",source:"@site/blog/2023-01-07-materialui-with-docusaurus/index.mdx",title:"Guide: Docusaurus with Material UI",description:"",date:"2023-01-07T00:00:00.000Z",formattedDate:"January 7, 2023",tags:[{label:"material ui",permalink:"/blog/tags/material-ui"},{label:"material",permalink:"/blog/tags/material"},{label:"docusaurus",permalink:"/blog/tags/docusaurus"},{label:"cssvarsprovider",permalink:"/blog/tags/cssvarsprovider"},{label:"theme",permalink:"/blog/tags/theme"},{label:"dark mode",permalink:"/blog/tags/dark-mode"},{label:"light mode",permalink:"/blog/tags/light-mode"}],readingTime:4.51,hasTruncateMarker:!0,authors:[{name:"Reap3r",title:"Developer",url:"https://github.com/Boston343",imageURL:"https://github.com/Boston343.png",key:"reap3r"}],frontMatter:{slug:"Guide to using Docusaurus with Material UI",title:"Guide: Docusaurus with Material UI",authors:["reap3r"],tags:["material ui","material","docusaurus","cssvarsprovider","theme","dark mode","light mode"]}},k={authorsImageUrls:[void 0]},b=[{value:"Install Material UI",id:"install-material-ui",level:2},{value:"Using Material UI Components",id:"using-material-ui-components",level:2},{value:"Matching Docusaurus and MUI Theme",id:"matching-docusaurus-and-mui-theme",level:2},{value:"Material UI CSS Theme Variables",id:"material-ui-css-theme-variables",level:3},{value:"Create MUI Color Theme",id:"create-mui-color-theme",level:3},{value:"Docusaurus useColorMode",id:"docusaurus-usecolormode",level:3},{value:"Syncing the Themes",id:"syncing-the-themes",level:3},{value:"Using MUI Them Elsewhere",id:"using-mui-them-elsewhere",level:2},{value:"Further Documentation",id:"further-documentation",level:2}],v={toc:b};function x(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"After fighting Docusaurus and Material UI in the creation of this website - I decided to write a post explaining how to use them together so you don't have to go through the same struggle I did."),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("img",{src:d.Z,alt:"Docusaurus with MUI meme",style:{width:500}})),(0,o.kt)("p",null,"This post assumes you already have ",(0,o.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/installation"},"Docusaurus")," installed and started up using your favorite development environment."),(0,o.kt)("h2",{id:"install-material-ui"},"Install Material UI"),(0,o.kt)("p",null,"Install the MUI core."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @mui/material @emotion/react @emotion/styled\n")),(0,o.kt)("h2",{id:"using-material-ui-components"},"Using Material UI Components"),(0,o.kt)("p",null,"Once installed you can use the MUI components and other tools like normal. Import them, and use them in your ",(0,o.kt)("inlineCode",{parentName:"p"},".jsx")," and ",(0,o.kt)("inlineCode",{parentName:"p"},".mdx")," code. I used them to style the homepage."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import Container from "@mui/system/Container";\nimport Card from "@mui/material/Card";\nimport Grid from "@mui/material/Grid";\nimport Typography from "@mui/material/Typography";\n\n<Grid container justifyContent="center" sx={{ paddingBottom: 8 }}>\n  <Grid item xs={12}>\n    <Card\n      variant="outlined"\n      sx={{\n        textAlign: "center",\n        boxShadow: 3,\n      }}\n    >\n      <Typography variant="h4">This is an example</Typography>\n    </Card>\n  </Grid>\n</Grid>;\n')),(0,o.kt)(s.ZP,{container:!0,justifyContent:"center",sx:{paddingBottom:8},mdxType:"Grid"},(0,o.kt)(s.ZP,{item:!0,xs:12,mdxType:"Grid"},(0,o.kt)(i.Z,{variant:"outlined",sx:{textAlign:"center",boxShadow:3},mdxType:"Card"},(0,o.kt)(l.Z,{variant:"h4",mdxType:"Typography"},"This is an example")))),(0,o.kt)("p",null,"Try changing the color theme using the Docusaurus button. Notice how the above example does not change color depending on which color theme is chosen? Let's fix that."),(0,o.kt)("h2",{id:"matching-docusaurus-and-mui-theme"},"Matching Docusaurus and MUI Theme"),(0,o.kt)("p",null,"This was the fun part. I wanted to be able to make the MUI components update theme along with Docusaurus."),(0,o.kt)("h3",{id:"material-ui-css-theme-variables"},"Material UI CSS Theme Variables"),(0,o.kt)("p",null,"For integrating MUI theme with Docusaurus, I opted for using the MUI experimental ",(0,o.kt)("a",{parentName:"p",href:"https://mui.com/material-ui/experimental-api/css-theme-variables/overview/"},"CSS Theme Variables"),". It allows you to create both your light and dark colors in the same theme, and switch between them using MUIs ",(0,o.kt)("inlineCode",{parentName:"p"},"setMode")," from ",(0,o.kt)("inlineCode",{parentName:"p"},"useColorScheme"),"."),(0,o.kt)("h3",{id:"create-mui-color-theme"},"Create MUI Color Theme"),(0,o.kt)("p",null,"I first created my color scheme in a file I named ",(0,o.kt)("inlineCode",{parentName:"p"},"index.jsx")," at ",(0,o.kt)("inlineCode",{parentName:"p"},"/src/components/MuiTheme/index.jsx"),". Like MUIs ",(0,o.kt)("inlineCode",{parentName:"p"},"createTheme"),", you only need to specify the variables you wish to change from default. A simplified theme is below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="/src/components/MuiTheme/index.jsx"',title:'"/src/components/MuiTheme/index.jsx"'},'import { experimental_extendTheme as extendTheme } from "@mui/material/styles";\n\n// General MUI theme\nconst extTheme = extendTheme({\n  colorSchemes: {\n    light: {\n      palette: {\n        primary: {\n          main: "hsl(240, 48%, 47%)",\n        },\n      },\n    },\n    dark: {\n      palette: {\n        primary: {\n          main: "hsl(240, 90%, 70%)",\n        },\n      },\n    },\n  },\n});\n\nexport default extTheme;\n')),(0,o.kt)("h3",{id:"docusaurus-usecolormode"},"Docusaurus useColorMode"),(0,o.kt)("p",null,"One of the important pieces of information we need from Docusaurus, is what the current color theme is. In order to get this, we can use the Docusaurus provided hook ",(0,o.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/api/themes/configuration/#use-color-mode"},"useColorMode"),"."),(0,o.kt)("p",null,"An important bit of information in their docs is that the component which calls ",(0,o.kt)("inlineCode",{parentName:"p"},"useColorMode")," must be a child of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Layout")," component."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This by default is inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"Home")," component at ",(0,o.kt)("inlineCode",{parentName:"p"},"/src/pages/index.js"))),(0,o.kt)("h3",{id:"syncing-the-themes"},"Syncing the Themes"),(0,o.kt)("p",null,"First, we need to import them MUI theme, and wrap it around the ",(0,o.kt)("inlineCode",{parentName:"p"},"Layout")," component."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="index.js"',title:'"index.js"'},'import Layout from "@theme/Layout";\n// import your created theme\nimport theme from "@site/src/components/MuiTheme";\n\nexport default function Home() {\n  const { siteConfig } = useDocusaurusContext();\n  return (\n    <>\n      <CssVarsProvider theme={theme}>\n        <Layout\n          title={`Reap3r ${siteConfig.title}`}\n          description="Documentation on web development tips, tools, and techniques. By Reap3r"\n          // description="Description will go into a meta tag in <head />"\n        >\n          <HomepageHeader />\n          <main>\n            <HomepageCards />\n          </main>\n        </Layout>\n      </CssVarsProvider>\n    </>\n  );\n}\n')),(0,o.kt)("p",null,"Then inside ",(0,o.kt)("inlineCode",{parentName:"p"},"HomepageHeader"),", we can access the Docusaurus color mode, and use it to switch the MUI color theme."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="index.js"',title:'"index.js"'},'function HomepageHeader() {\n  // colorMode holds the Docusaurus theme\n  const { colorMode } = useColorMode();\n\n  // MUI color mode setting\n  const { setMode } = useColorScheme();\n\n  // set Material UI theme based on Docusaurus theme\n  useEffect(() => {\n    // useEffect: https://www.w3schools.com/react/react_useeffect.asp\n    // added useEffect because I was getting an error https://stackoverflow.com/questions/62336340/cannot-update-a-component-while-rendering-a-different-component-warning\n    setMode(colorMode === "dark" ? "dark" : "light");\n  }, [colorMode]);\n\n  return <header> your themed MUI components here... </header>;\n}\n')),(0,o.kt)("h2",{id:"using-mui-them-elsewhere"},"Using MUI Them Elsewhere"),(0,o.kt)("p",null,"Now that the themes sync, we can use that synced theme anywhere on the site! Including this blog section. All we need to do is import our theme, and wrap items in ",(0,o.kt)("inlineCode",{parentName:"p"},"<CssVarsProvider>"),". You can even reference your theme variables from within the components. Below I added using the ",(0,o.kt)("inlineCode",{parentName:"p"},"primary.main")," color for the text (which changes between dark and light mode)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="This blog post"',title:'"This',blog:!0,'post"':!0},'import Container from "@mui/system/Container";\nimport Card from "@mui/material/Card";\nimport Grid from "@mui/material/Grid";\nimport Typography from "@mui/material/Typography";\nimport { Experimental_CssVarsProvider as CssVarsProvider } from "@mui/material/styles";\nimport theme from "@site/src/components/MuiTheme";\n\n<CssVarsProvider theme={theme}>\n  <Grid container justifyContent="center" sx={{ paddingBottom: 8 }}>\n    <Grid item xs={12}>\n      <Card\n        variant="outlined"\n        sx={{\n          textAlign: "center",\n          boxShadow: 3,\n        }}\n      >\n        <Typography variant="h4">This is an example</Typography>\n      </Card>\n    </Grid>\n  </Grid>\n</CssVarsProvider>;\n')),(0,o.kt)(m.CM,{theme:u.Z,mdxType:"CssVarsProvider"},(0,o.kt)(s.ZP,{container:!0,justifyContent:"center",sx:{paddingBottom:8},mdxType:"Grid"},(0,o.kt)(s.ZP,{item:!0,xs:12,mdxType:"Grid"},(0,o.kt)(i.Z,{variant:"outlined",sx:{textAlign:"center",boxShadow:3},mdxType:"Card"},(0,o.kt)(l.Z,{variant:"h4",sx:{color:"primary.main"},mdxType:"Typography"},"This is an example"))))),(0,o.kt)("p",null,"Now try changing the color theme using the Docusaurus button. Notice how the above example ",(0,o.kt)("strong",{parentName:"p"},"DOES")," change color depending on which color theme is chosen?"),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("img",{src:c,alt:"Theme synced meme",style:{width:500}})),(0,o.kt)("h2",{id:"further-documentation"},"Further Documentation"),(0,o.kt)("p",null,"For further details on MUIs CSS theme variables, see their ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://mui.com/material-ui/experimental-api/css-theme-variables/customization/"},"documentation"))),(0,o.kt)(h,{mdxType:"CallingCard"}))}x.isMDXComponent=!0},3078:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/materialui-with-docusaurus-6856e54af9e3da953748f3f5c2878e9d.jpg"}}]);