"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8697],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(i,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:o,s[1]=l;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8396:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:1},s="React",l={unversionedId:"Front End/Advanced/react",id:"Front End/Advanced/react",title:"React",description:"React is a popular JavaScript library for building user interfaces.",source:"@site/docs/Front End/Advanced/react.md",sourceDirName:"Front End/Advanced",slug:"/Front End/Advanced/react",permalink:"/docs/Front End/Advanced/react",draft:!1,editUrl:"https://github.com/Boston343/web-dev-docs/docs/Front End/Advanced/react.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Advanced",permalink:"/docs/category/advanced"},next:{title:"Next.js",permalink:"/docs/Front End/Advanced/next"}},i={},p=[{value:"VSCode Setup",id:"vscode-setup",level:2},{value:"Commands",id:"commands",level:2},{value:"Console Logging",id:"console-logging",level:2},{value:"React Basics",id:"react-basics",level:2},{value:"Rendering",id:"rendering",level:3},{value:"JS in HTML in JS",id:"js-in-html-in-js",level:3},{value:"Classes (CSS)",id:"classes-css",level:3},{value:"HTML Attributes",id:"html-attributes",level:3},{value:"Inline CSS Styling",id:"inline-css-styling",level:3},{value:"Components",id:"components",level:2},{value:"Creating Components",id:"creating-components",level:3},{value:"Properties (Props)",id:"properties-props",level:3},{value:"JSX",id:"jsx",level:3},{value:"Controlled Components",id:"controlled-components",level:3},{value:"States",id:"states",level:2},{value:"Hook State",id:"hook-state",level:3},{value:"Class State",id:"class-state",level:3},{value:"Complex State",id:"complex-state",level:3},{value:"Effects",id:"effects",level:2},{value:"Conditional Rendering",id:"conditional-rendering",level:2},{value:"Ternary Operator",id:"ternary-operator",level:3},{value:"AND Operator",id:"and-operator",level:3},{value:"Forms",id:"forms",level:2},{value:"Using &quot;event&quot;",id:"using-event",level:3},{value:"Overriding Default Form Behavior",id:"overriding-default-form-behavior",level:3},{value:"Managing Component Tree",id:"managing-component-tree",level:2},{value:"React Framework",id:"react-framework",level:2},{value:"State Mangement",id:"state-mangement",level:2},{value:"UI Kits",id:"ui-kits",level:2},{value:"Mobile Development",id:"mobile-development",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"react"},"React"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://reactjs.org/"},"React"))," is a popular JavaScript library for building user interfaces."),(0,o.kt)("p",null,'It is the "most loved and popular front-end framework". It breaks down everything into component trees.'),(0,o.kt)("p",null,"Ex."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"App -> Nav Bar / ToDoList\n\nToDoList -> ListItem\n\nListItem -> Checkbox / ItemText\n")),(0,o.kt)("p",null,"It's kind of like creating your own HTML elements (component), so it's really easy to view and has good modularity."),(0,o.kt)("h2",{id:"vscode-setup"},"VSCode Setup"),(0,o.kt)("p",null,"Follow ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/facebook/create-react-app"},"this"))," for first time setup."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"First time, install React with ",(0,o.kt)("inlineCode",{parentName:"li"},"npm i react"),"."),(0,o.kt)("li",{parentName:"ol"},"Open your terminal (I use ",(0,o.kt)("a",{parentName:"li",href:"https://hyper.is/"},"Hyper")," configured for ",(0,o.kt)("a",{parentName:"li",href:"https://gist.github.com/coco-napky/404220405435b3d0373e37ec43e54a23"},"git bash"),") in the folder which you want to create your project folder."),(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"npx create-react-app [name-of-your-new-app-folder]"))),(0,o.kt)("h2",{id:"commands"},"Commands"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm start")," starts the dev server."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm run build")," bundles the app into static files for production."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm test")," starts the test runner."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm run eject")," removes this tool and copies build dependencies, configuration files, and scripts into the app directory. If you do this, you can't go back!"),(0,o.kt)("h2",{id:"console-logging"},"Console Logging"),(0,o.kt)("p",null,"In react apps, when you use ",(0,o.kt)("inlineCode",{parentName:"p"},'console.log("thingToLog");')," it will log to the browser console, not the VSCode console."),(0,o.kt)("h2",{id:"react-basics"},"React Basics"),(0,o.kt)("h3",{id:"rendering"},"Rendering"),(0,o.kt)("p",null,"React places JS and HTML on webpage using a ",(0,o.kt)("inlineCode",{parentName:"p"},"render")," function."),(0,o.kt)("p",null,"This function can only render one HTML object, so just wrap everything in a ",(0,o.kt)("inlineCode",{parentName:"p"},"<div>"),"."),(0,o.kt)("h3",{id:"js-in-html-in-js"},"JS in HTML in JS"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"We need to go deeper!")),(0,o.kt)("p",null,"Wrap expressions (including vars) in curly braces like ",(0,o.kt)("inlineCode",{parentName:"p"},"{var}")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import React from "react";\nimport ReactDOM from "react-dom/client";\nconst name = "Reap3r";\nconst root = ReactDOM.createRoot(document.getElementById("root"));\nroot.render(<h1>Hello {name}!</h1>);\n')),(0,o.kt)("h3",{id:"classes-css"},"Classes (CSS)"),(0,o.kt)("p",null,"You can add css classes inside react."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// in css have a ".heading"\nroot.render(<h1 className="heading">Hello {name}!</h1>;\n')),(0,o.kt)("h3",{id:"html-attributes"},"HTML Attributes"),(0,o.kt)("p",null,"Use camel case for attributes, This is ",(0,o.kt)("em",{parentName:"p"},"NOT")," like normal HTML where it is all lowercase."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// normal HTML uses "contenteditable", react is different\nroot.render(<h1 contentEditable="true">Hello {name}!</h1>;\n')),(0,o.kt)("h3",{id:"inline-css-styling"},"Inline CSS Styling"),(0,o.kt)("p",null,"This is useful to update styling based on changes (user input, etc) within react."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const customStyle = {\n  color: "red",\n  fontSize: "20px",\n};\n\nif (someUserInput) {\n  customStyle.color = "blue"; // can change on the fly in React and it will update\n}\nroot.render(<h1 style={customStyle}>Hello World!</h1>);\n')),(0,o.kt)("h2",{id:"components"},"Components"),(0,o.kt)("p",null,"Each component has small bits of HTML, CSS, and JS. Each component can talk to the server individually, so each can load separately (you don't need to reload the entire page)."),(0,o.kt)("p",null,"Every component (and its file) should start with a capital letter. Ex. component ",(0,o.kt)("inlineCode",{parentName:"p"},"ToDoItem")," in file ",(0,o.kt)("inlineCode",{parentName:"p"},"ToDoItem.jsx"),"."),(0,o.kt)("h3",{id:"creating-components"},"Creating Components"),(0,o.kt)("p",null,"Before hooks, they were setup like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// ClassName is a "React component class" or "React component type"\nclass ClassName extends React.Component { render() {details here} }\n')),(0,o.kt)("p",null,"Functional components with hooks can be setup like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import React from "react";\nimport "./App.css";\n\nfunction App() {\n  return (\n    <div className="App">\n      <h1>My First Functional Component</h1>\n    </div>\n  );\n}\n\nexport default App;\n')),(0,o.kt)("h3",{id:"properties-props"},"Properties (Props)"),(0,o.kt)("p",null,'Components can take parameters, called "props" (short for "properties"), and return a hierarchy of view to display via the ',(0,o.kt)("inlineCode",{parentName:"p"},"render")," method."),(0,o.kt)("p",null,'These "props" are how you can pass properties to components.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// copmponent with "name" and "email" props\nfunction Card(props) {\n  return (\n    <div>\n      <h2>{props.name}</h2>\n      <p>{props.email}</p>\n    </div>\n  );\n}\n\n//this is how you pass them, must be the same name\n<Card name="Beyonce" email="b@beyonce.com" />;\n')),(0,o.kt)("h3",{id:"jsx"},"JSX"),(0,o.kt)("p",null,"Most react devs use a special syntax called ",(0,o.kt)("em",{parentName:"p"},"JSX")," which makes these structures easier to write."),(0,o.kt)("p",null,"Example of component in a separate file. It can be imported with line ",(0,o.kt)("inlineCode",{parentName:"p"},'import List from "./components/List";')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="List.jsx"',title:'"List.jsx"'},'import React from "react";\n\nfunction List() {\n  return (\n    <div>\n      <ul>\n        <li>Bacon</li>\n        <li>Cheese</li>\n        <li>Avocado</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default List;\n')),(0,o.kt)("h3",{id:"controlled-components"},"Controlled Components"),(0,o.kt)("p",null,"In HTML, form elements such as ",(0,o.kt)("inlineCode",{parentName:"p"},"<input>")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"<textarea>")," typically maintain their own state and update it based on user input. In react, mutable state is typically kept in the state property of components, and only updated with ",(0,o.kt)("inlineCode",{parentName:"p"},"setState()")," or your specific state setting function with hooks."),(0,o.kt)("p",null,'We combine the two by making the react state the "single source of truth".'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'function App() {\n  const [name, setName] = React.useState("");\n\n  function handleChange(event) {\n    console.log(event.target.value);\n    setName(event.target.value);\n  }\n\n  return (\n    <div className="container">\n      <h1>Hello {name}</h1>\n      <input\n        onChange={handleChange}\n        type="text"\n        placeholder="What\'s your name?"\n        value={name}\n      />\n      <button>Submit</button>\n    </div>\n  );\n}\n')),(0,o.kt)("h2",{id:"states"},"States"),(0,o.kt)("p",null,"React has hooks to use states, and it has classes for states. While react is moving to using hooks, you can still use classes."),(0,o.kt)("p",null,"Advantages of using hooks: ",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/53062732/react-function-components-with-hooks-vs-class-components"},"link1"),", ",(0,o.kt)("a",{parentName:"p",href:"https://blog.techfabric.com/what-is-the-advantage-of-using-react-hooks-over-react-classes/"},"link2")),(0,o.kt)("h3",{id:"hook-state"},"Hook State"),(0,o.kt)("p",null,"Using ",(0,o.kt)("inlineCode",{parentName:"p"},"React.useState()")," you can generate a state and setter function."),(0,o.kt)("p",null,"Setup like ",(0,o.kt)("inlineCode",{parentName:"p"},"const [stateKey, setStateKeyFunction] = React.useState('');")),(0,o.kt)("p",null,"In the above, ",(0,o.kt)("inlineCode",{parentName:"p"},"stateKey")," is used to access the state variable. Then ",(0,o.kt)("inlineCode",{parentName:"p"},"setStateKeyFunction( newValue )"),' sets the "stateKey" to "newValue".'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import React from "react";\n\nfunction App() {\n  const [name, setName] = React.useState("");\n\n  function handleChange(event) {\n    const newName = event.target.value;\n    setName(newName);\n  }\n\n  return (\n    <div className="container">\n      <h1>Hello {name}</h1>>\n      <input\n        onChange={handleChange}\n        type="text"\n        placeholder="What\'s your name?"\n        value={name}\n      />\n      <button>Submit</button>\n    </div>\n  );\n}\n')),(0,o.kt)("h3",{id:"class-state"},"Class State"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This is not recommended. It is recommended to use hooks for state.")),(0,o.kt)("p",null,"React components can have a state by setting ",(0,o.kt)("inlineCode",{parentName:"p"},"this.state")," in their constructors."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"this.state")," should be considered private to a react component that it's defined in."),(0,o.kt)("p",null,"All React components with a constructor should start with a ",(0,o.kt)("inlineCode",{parentName:"p"},"super(props)")," call."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'class Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null,\n    };\n  }\n\n  render() {\n    return (\n      <button\n        className="square"\n        onClick={() => {\n          console.log("click");\n        }}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n')),(0,o.kt)("p",null,"How ",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/43638938/updating-an-object-with-setstate-in-react"},"setState")," works."),(0,o.kt)("h3",{id:"complex-state"},"Complex State"),(0,o.kt)("p",null,"Rather than a state with only one value, you can have a state be a JS object."),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"You cannot access event.target.name (or anything 'event') from within a stateful setter. So access it ",(0,o.kt)("em",{parentName:"p"},"before")," the setter.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'function App() {\n  const [fullName, setFullName] = React.useState({\n    fName: "",\n    lName: "",\n  });\n\n  function handleChange(event) {\n    const { value, name } = event.target;\n\n    setNewNote((prevValue) => {\n      // if (name === "title") {\n      //   return {\n      //     title: value,\n      //     content: prevValue.content,\n      //   };\n      // } else if (name === "content") {\n      //   return {\n      //     title: prevValue.title,\n      //     content: value,\n      //   };\n      // }\n\n      // This is a shorter version of the above\n      return {\n        ...prevValue,\n        [name]: value,\n      };\n    });\n  }\n\n  return (\n    <div className="container">\n      <h1>\n        Hello {fullName.fName} {fullName.lName}\n      </h1>\n      <form>\n        <input\n          onChange={handleChange}\n          name="fName"\n          placeholder="First Name"\n          value={fullName.fName}\n        />\n        <input\n          onChange={handleChange}\n          name="lName"\n          placeholder="Last Name"\n          value={fullName.lName}\n        />\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n}\n')),(0,o.kt)("h2",{id:"effects"},"Effects"),(0,o.kt)("p",null,"Another hook in react is the ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect")," hook. It allows you to perform side effects in components, such as: fetching data, directly updating the DOM, and timers."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.w3schools.com/react/react_useeffect.asp"},"w3schools documentation on useEffect"))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"I have gotten an error before which I solved using the ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect")," hook. It was related to this ",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/62336340/cannot-update-a-component-while-rendering-a-different-component-warning"},"StackOverflow post"),". My solution is below. The error was related to ",(0,o.kt)("inlineCode",{parentName:"p"},'setMode(colorMode === "dark" ? "dark" : "light");')," and said that a component cannot be updated while rendering a different component."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},'function HomepageHeader() {\n  const { siteConfig } = useDocusaurusContext();\n\n  // colorMode holds the Docusaurus theme\n  const { colorMode } = useColorMode();\n\n  // MUI color mode setting\n  const { setMode } = useColorScheme();\n\n  // set Material UI theme based on Docusaurus theme\n  useEffect(() => {\n    // useEffect: https://www.w3schools.com/react/react_useeffect.asp\n    // added useEffect because I was getting an error https://stackoverflow.com/questions/62336340/cannot-update-a-component-while-rendering-a-different-component-warning\n    setMode(colorMode === "dark" ? "dark" : "light");\n  }, [colorMode]);\n\n  return (\n    <header className={clsx("hero hero--primary", styles.heroBanner)}>\n      <div className="container">\n        <h1 className="hero__title">{siteConfig.title}</h1>\n        <p className="hero__subtitle">{siteConfig.tagline}</p>\n        <div className={styles.buttons}>\n          <Button\n            // className={clsx("button", styles.btnSecondaryCustom)}\n            className="button"\n            size="large"\n            variant="contained"\n            href="/docs/intro"\n            color="secondary"\n          >\n            Docs\n          </Button>\n        </div>\n      </div>\n    </header>\n  );\n}\n'))),(0,o.kt)("h2",{id:"conditional-rendering"},"Conditional Rendering"),(0,o.kt)("p",null,"You can conditionally render within React using Ternary Operator & ",(0,o.kt)("em",{parentName:"p"},"AND")," Operator."),(0,o.kt)("h3",{id:"ternary-operator"},"Ternary Operator"),(0,o.kt)("p",null,"Ternary is useful for doing conditional checks for rendering elements."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'function App() {\n  return (\n    <div className="container">{isLoggedIn ? <h1>Hello</h1> : <Login />}</div>\n  );\n}\n')),(0,o.kt)("h3",{id:"and-operator"},"AND Operator"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"AND")," is useful for doing conditional checks for rendering elements, if the false case is a ",(0,o.kt)("inlineCode",{parentName:"p"},"null"),". This works because JS only evaluates the second part of an ",(0,o.kt)("inlineCode",{parentName:"p"},"&&")," expression if the first part is true. Otherwise it is ignored to save time."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// instead of  {currentTime > 12 ? <h1>Why are you still working?</h1> : null}\n// you can use {currentTime > 12 && <h1>Why are you still working?</h1>}\nconst currentTime = new Date().getHours();\nfunction App() {\n  return (\n    <div className="container">\n      {currentTime > 12 && <h1>Why are you still working?</h1>}\n    </div>\n  );\n}\n')),(0,o.kt)("h2",{id:"forms"},"Forms"),(0,o.kt)("p",null,"Forms are used very often. These are some useful things you can do."),(0,o.kt)("h3",{id:"using-event"},'Using "event"'),(0,o.kt)("p",null,"Getting info from an input in real time, use ",(0,o.kt)("inlineCode",{parentName:"p"},"event"),". In the below example, we have an input which you can add ",(0,o.kt)("inlineCode",{parentName:"p"},"onChange={handleChangeFunction}")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'function handleChangeFunction(event) {\n  // event is passed automatically\n  console.log(event.target.value); // gives you the value of what is inside the input every time a change is made\n  console.log(event.target.placeholder); // tells you what the input placeholder is\n  console.log(event.target.type); // gives you the type that the input is. ex. "text"\n}\n')),(0,o.kt)("h3",{id:"overriding-default-form-behavior"},"Overriding Default Form Behavior"),(0,o.kt)("p",null,"When you submit a form, by default it refreshes the page. If you want to stop this you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"event.preventDefault()"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'function App() {\n  const [name, setName] = React.useState("");\n  const [submittedName, setSubmittedName] = React.useState("");\n\n  function handleChange(event) {\n    // console.log(event.target.value);\n    setName(event.target.value);\n  }\n\n  function handleBtnClick(event) {\n    setSubmittedName(name);\n    event.preventDefault(); //prevents the default event behavior.\n  }\n\n  return (\n    <div className="container">\n      <h1>Hello {submittedName}</h1>\n      <form onSubmit={handleBtnClick}>\n        <input\n          onChange={handleChange}\n          type="text"\n          placeholder="What\'s your name?"\n          value={name}\n        />\n        <button type="submit">Submit</button>\n      </form>\n    </div>\n  );\n}\n')),(0,o.kt)("h2",{id:"managing-component-tree"},"Managing Component Tree"),(0,o.kt)("p",null,"If you have a child component, but you want a change within it to affect something in the parent, how do you do it?"),(0,o.kt)("p",null,"You can pass functions to the child, and you can use those functions as the child and pass back details (like props)."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/managing-a-component-tree-forked-cuxus7?file=/src/components/ToDoItem.jsx"},"Example 1")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/managing-a-component-tree-practice-forked-sj60k8?file=/src/components/InputArea.jsx"},"Example 2")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="ToDoItem.jsx"',title:'"ToDoItem.jsx"'},'import React from "react";\n\nfunction ToDoItem(props) {\n  return (\n    <li\n      onClick={() => {\n        // here is where you call the function passed from parent\n        props.onChecked(props.id);\n      }}\n    >\n      {props.item}\n    </li>\n  );\n}\n\nexport default ToDoItem;\n')),(0,o.kt)("h2",{id:"react-framework"},"React Framework"),(0,o.kt)("p",null,"Next.js is the most popular. It is better for SEO. It pre-loads info for fast user experience on loading into page. It can optimize static sites as well. ",(0,o.kt)("a",{parentName:"p",href:"https://pagepro.co/blog/what-is-nextjs/"},"Why should you use Next.js?")),(0,o.kt)("h2",{id:"state-mangement"},"State Mangement"),(0,o.kt)("p",null,"A newer popular choice is ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://recoiljs.org/"},"Recoil")),"."),(0,o.kt)("p",null,"Battle tested choice is ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://redux.js.org/"},"Redux")),". Recommended to use ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://redux-toolkit.js.org/"},"Redux Toolkit"))," for this."),(0,o.kt)("h2",{id:"ui-kits"},"UI Kits"),(0,o.kt)("p",null,"These are for styling your react app."),(0,o.kt)("p",null,"Most popular is ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://mui.com/material-ui/getting-started/overview/"},"Material UI")),"."),(0,o.kt)("p",null,'Other options include "Onsen UI", "Chakra UI", and "React Boostrap".'),(0,o.kt)("h2",{id:"mobile-development"},"Mobile Development"),(0,o.kt)("p",null,"React Native - leverage react to build apps for both Android and iOS."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"React based"),(0,o.kt)("li",{parentName:"ul"},"Code reusability"),(0,o.kt)("li",{parentName:"ul"},"Large commmunity")))}u.isMDXComponent=!0}}]);