"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4429],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),h=l(n),d=o,m=h["".concat(p,".").concat(d)]||h[d]||u[d]||s;return n?a.createElement(m,r(r({ref:t},c),{},{components:n})):a.createElement(m,r({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,r=new Array(s);r[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[h]="string"==typeof e?e:o,r[1]=i;for(var l=2;l<s;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4398:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const s=n.p+"assets/images/secrets_db-b335777cb55794f13aea51af9c305b2b.jpg",r={sidebar_position:5},i="Security and Authentication",p={unversionedId:"security-and-authentication",id:"security-and-authentication",title:"Security and Authentication",description:"Examples of encryption, hashing, salting, cookies, sessions, 0Auth, and more.",source:"@site/docs/security-and-authentication.md",sourceDirName:".",slug:"/security-and-authentication",permalink:"/docs/security-and-authentication",draft:!1,editUrl:"https://github.com/Boston343/web-dev-docs/docs/security-and-authentication.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"APIs",permalink:"/docs/api"},next:{title:"Create Effective Websites",permalink:"/docs/create-effective-websites"}},l={},c=[{value:"Secrets Needed in Code",id:"secrets-needed-in-code",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:".gitignore",id:"gitignore",level:3},{value:"Security Levels",id:"security-levels",level:2},{value:"1. Username and Password Only",id:"1-username-and-password-only",level:3},{value:"2. Encryption",id:"2-encryption",level:3},{value:"3. Hashing with md5",id:"3-hashing-with-md5",level:3},{value:"4. Hashing and Saltin with bcrypt",id:"4-hashing-and-saltin-with-bcrypt",level:3},{value:"5. Cookies and Sessions",id:"5-cookies-and-sessions",level:3},{value:"6. OAuth Authentication",id:"6-oauth-authentication",level:3},{value:"6a. Google OAuth 2.0 Authentication",id:"6a-google-oauth-20-authentication",level:3},{value:"6b. Facebook 0Auth 2.0 Authentication",id:"6b-facebook-0auth-20-authentication",level:3},{value:"Authentication Example Project",id:"authentication-example-project",level:2},{value:"Other Authentication Resources",id:"other-authentication-resources",level:2}],h={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"security-and-authentication"},"Security and Authentication"),(0,o.kt)("p",null,"Examples of encryption, hashing, salting, cookies, sessions, 0Auth, and more."),(0,o.kt)("h2",{id:"secrets-needed-in-code"},"Secrets Needed in Code"),(0,o.kt)("p",null,"A lot of times you will need access to secrets in your code. These could be things like your encryption key, and API keys."),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"If someone gets access to your keys it is very bad news.")),(0,o.kt)("p",null,"Good news is, there are ways to protect them."),(0,o.kt)("h3",{id:"environment-variables"},"Environment Variables"),(0,o.kt)("p",null,"Environment variables allow you to keep track of secrets. You should ",(0,o.kt)("em",{parentName:"p"},"never")," upload these to github."),(0,o.kt)("p",null,"You put them in a file ",(0,o.kt)("inlineCode",{parentName:"p"},".env"),". You can access them in your code using ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/package/dotenv"},"dotenv")),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import dotenv from "dotenv";\n\n// gets the .env data for use with process.env.\ndotenv.config();\n\n// now it is used like this. The name of environment varialbe in .env is "ENC_KEY" in this case\nconst secret = process.env.ENC_KEY;\n')),(0,o.kt)("h3",{id:"gitignore"},".gitignore"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},".gitignore")," file to keep various files or folders from being uploaded to github. Always set this up! An example file is below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bat",metastring:'title=".gitignore"',title:'".gitignore"'},"# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n\n# dependencies\n/node_modules\n/.pnp\n.pnp.js\n\n# testing\n/coverage\n\n# production\n/build\n\n# misc\n.DS_Store\n.env\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local\n\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n")),(0,o.kt)("h2",{id:"security-levels"},"Security Levels"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Username and Password Only"),(0,o.kt)("li",{parentName:"ol"},"Encryption"),(0,o.kt)("li",{parentName:"ol"},"Hashing (with md5)"),(0,o.kt)("li",{parentName:"ol"},"Hashing and Salting (with bcrypt)"),(0,o.kt)("li",{parentName:"ol"},"Cookies and Sessions"),(0,o.kt)("li",{parentName:"ol"},"OAuth Authentication")),(0,o.kt)("h3",{id:"1-username-and-password-only"},"1. Username and Password Only"),(0,o.kt)("p",null,"This is the most basic - simply storing username and password in plaintext in a database."),(0,o.kt)("p",null,"If the database is hacked then all user and password combinations are visible - ",(0,o.kt)("strong",{parentName:"p"},"bad!")),(0,o.kt)("h3",{id:"2-encryption"},"2. Encryption"),(0,o.kt)("p",null,"We can encrypt the password field as the next level of security. The password is obviously the most important thing to encrypt."),(0,o.kt)("p",null,"Downside of this is it doesn't protect against someone with admin access to the website from finding out user passwords, because they can get the encryption key."),(0,o.kt)("p",null,"With MongoDB and Mongoose, we can use a package ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/package/mongoose-encryption"},"mongoose-encryption")),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="app.js - relevant code"',title:'"app.js',"-":!0,relevant:!0,'code"':!0},'import encrypt from "mongoose-encryption";\n\n// schema\nconst userSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    required: [true, "ERROR: You need a username."],\n  },\n  password: {\n    type: String,\n    required: [true, "ERROR: You need a password."],\n  },\n});\n\n// setup database encryption\nconst secret = process.env.ENC_KEY;\nuserSchema.plugin(encrypt, { secret: secret, encryptedFields: ["password"] });\n\n// model: mongoose will auto make it plural "users"\nconst User = mongoose.model("User", userSchema);\n')),(0,o.kt)("h3",{id:"3-hashing-with-md5"},"3. Hashing with md5"),(0,o.kt)("p",null,"Passwords can still be hacked form level 2. So what about another method. Here, we don't store the password or encrypted password on DB, but instead store a ",(0,o.kt)("em",{parentName:"p"},"hash")," off the password."),(0,o.kt)("p",null,"When a user inputs a password, you hash it, and compare that hash to the hash in the DB. If they match then the password is correct."),(0,o.kt)("p",null,"We can use package ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/package/md5"},"md5"))," for this."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import md5 from "md5";\n\n// this runs the md5 hash function on password. This value is what you should store in the DB\nmd5(password);\n')),(0,o.kt)("h3",{id:"4-hashing-and-saltin-with-bcrypt"},"4. Hashing and Saltin with bcrypt"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/package/bcrypt"},"bcrypt"))," is a slower hashing algorithm than md5 (much slower) so it's more secure. This is because it would take an attacker much longer to brute force the passwords."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Salting")," is appending a random strick to the end of the password, before hashing. This makes it so that even if two users have the same password, the hash will be different."),(0,o.kt)("p",null,"Notes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You store the salt in the DB"),(0,o.kt)("li",{parentName:"ul"},"You can increase security by increasing the number of ",(0,o.kt)("em",{parentName:"li"},"salt rounds"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Each increase in salt rounds increases the time it takes to has by 2")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import bcrypt from "bcrypt";\nconst saltRounds = 10;\n\nbcrypt.hash(myPlaintextPassword, saltRounds, function (err, hash) {\n  // Store hash in your password DB.\n});\n\n// Load hash from your password DB.\nbcrypt.compare(myPlaintextPassword, hash, function (err, result) {\n  // result == true\n});\n')),(0,o.kt)("h3",{id:"5-cookies-and-sessions"},"5. Cookies and Sessions"),(0,o.kt)("p",null,"For this you can use ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/package/passport"},"passport")),", ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/package/passport-local"},"passport-local")),", ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/package/express-session"},"express-session")),", and with MongoDB / mongoose use ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/package/passport-local-mongoose"},"passport-local-mongoose")),"."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For an usage example, see ",(0,o.kt)("inlineCode",{parentName:"p"},"Secrets")," on branch ",(0,o.kt)("inlineCode",{parentName:"p"},"passport-cookies-sessions")," ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/Boston343/Secrets/tree/passport-cookies-sessions"},"here")),". This includes authentication, registration, logon, and logoff.")),(0,o.kt)("p",null,"further documentation on passport.js usage details ",(0,o.kt)("a",{parentName:"p",href:"https://www.passportjs.org/concepts/authentication/strategies/"},"here")," and ",(0,o.kt)("a",{parentName:"p",href:"https://mherman.org/blog/user-authentication-with-passport-dot-js/"},"here"),"."),(0,o.kt)("h3",{id:"6-oauth-authentication"},"6. OAuth Authentication"),(0,o.kt)("p",null,'OAuth is short for "Open Authentication" and allows us to add the capability for users to log on with trusted platforms, such as Google, Twitter, Facebook, etc. Users are redirected to login with the service in question, and an ',(0,o.kt)("em",{parentName:"p"},"Auth Code")," is sent back to our website (like a one time access). We can also get an ",(0,o.kt)("em",{parentName:"p"},"Access Token")," which is valid for a lot longer than an ",(0,o.kt)("em",{parentName:"p"},"Auth Code")," (like a year pass)."),(0,o.kt)("p",null,"The ",(0,o.kt)("em",{parentName:"p"},"Access Token")," is what we can use to access data from people on that application (to which they have granted us access)."),(0,o.kt)("p",null,"Passport requires a ",(0,o.kt)("inlineCode",{parentName:"p"},"findorcreate")," function to work with your DB. With MongoDB and Mongoose this is a useful package ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/package/mongoose-findorcreate"},"mongoose-findorcreate")),"."),(0,o.kt)("h3",{id:"6a-google-oauth-20-authentication"},"6a. Google OAuth 2.0 Authentication"),(0,o.kt)("p",null,"For this, use Passport strategy ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.passportjs.org/packages/passport-google-oauth20/"},"passport-google-oauth20")),"."),(0,o.kt)("h3",{id:"6b-facebook-0auth-20-authentication"},"6b. Facebook 0Auth 2.0 Authentication"),(0,o.kt)("p",null,"For this, use Passport strategy ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.passportjs.org/packages/passport-facebook/"},"passport-facebook")),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"While implementing this I ran into issues testing. It seems like you ",(0,o.kt)("em",{parentName:"p"},"MUST")," have your website setup as HTTPS. Useful links ",(0,o.kt)("a",{parentName:"p",href:"https://programmerblog.net/nodejs-https-server/"},"here")," and ",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/43416880/setting-node-server-https"},"here"),".")),(0,o.kt)("h2",{id:"authentication-example-project"},"Authentication Example Project"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://reap3r-secrets.glitch.me/"},"This"))," is an example project I made using salting, hashing, and OAuth. You can test out the registration and login, although the 0Auth is limited to test accounts."),(0,o.kt)("p",null,"Code can be found ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/Boston343/Secrets"},"here")),"."),(0,o.kt)("p",null,"Below is what the database entries look like for the app:"),(0,o.kt)("img",{src:s,alt:"Secrets DB Entries",style:{width:900}}),(0,o.kt)("h2",{id:"other-authentication-resources"},"Other Authentication Resources"),(0,o.kt)("p",null,"Node.js passport login system tutorial (36 min) ",(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=-RCnNyD0L-s"},"here"),"."),(0,o.kt)("p",null,"Local authentication using passport in Node.js (docs) ",(0,o.kt)("a",{parentName:"p",href:"https://www.sitepoint.com/local-authentication-using-passport-node-js/"},"here"),"."),(0,o.kt)("p",null,"User authentication in web apps with passport, node, express (6 hours) ",(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=F-sFp_AvHc8"},"here"),"."),(0,o.kt)("p",null,"User authentication with passport and express 4 (docs) ",(0,o.kt)("a",{parentName:"p",href:"https://mherman.org/blog/local-authentication-with-passport-and-express-4/"},"here"),"."),(0,o.kt)("p",null,"Permissions / access control in web apps (docs) ",(0,o.kt)("a",{parentName:"p",href:"https://wasp-lang.dev/blog/2022/11/29/permissions-in-web-apps"},"here"),"."))}u.isMDXComponent=!0}}]);